// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fxLimit.proto

package grpc.client.app.fxLimit;

/**
 * <pre>
 * Limit categories
 * </pre>
 *
 * Protobuf enum {@code grpc_limits.Category}
 */
public enum Category
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>UNKNOWN_CATEGORY = 0;</code>
   */
  UNKNOWN_CATEGORY(0),
  /**
   * <code>FINANCIAL_CAPACITY = 1;</code>
   */
  FINANCIAL_CAPACITY(1),
  /**
   * <code>NATIONAL_TRANSFER = 2;</code>
   */
  NATIONAL_TRANSFER(2),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>UNKNOWN_CATEGORY = 0;</code>
   */
  public static final int UNKNOWN_CATEGORY_VALUE = 0;
  /**
   * <code>FINANCIAL_CAPACITY = 1;</code>
   */
  public static final int FINANCIAL_CAPACITY_VALUE = 1;
  /**
   * <code>NATIONAL_TRANSFER = 2;</code>
   */
  public static final int NATIONAL_TRANSFER_VALUE = 2;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Category valueOf(int value) {
    return forNumber(value);
  }

  public static Category forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN_CATEGORY;
      case 1: return FINANCIAL_CAPACITY;
      case 2: return NATIONAL_TRANSFER;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Category>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Category> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Category>() {
          public Category findValueByNumber(int number) {
            return Category.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return grpc.client.app.fxLimit.FxLimit.getDescriptor().getEnumTypes().get(0);
  }

  private static final Category[] VALUES = values();

  public static Category valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Category(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:grpc_limits.Category)
}

